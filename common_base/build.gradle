apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //MultiDex分包方法
        multiDexEnabled true

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /*RxLifecycle基础库*/
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle_components"]
    //分包
    api rootProject.ext.dependencies["multidex"]
    /*网络请求框架*/
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["converter_gson"]
    api rootProject.ext.dependencies["adapter_rxjava2"]
    api rootProject.ext.dependencies["logging_interceptor"]
    /*RxJava&RxAndroid*/
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["converter_scalars"]
    api rootProject.ext.dependencies["fastjson"]
    api rootProject.ext.dependencies["fresco"]
    //路由
    api rootProject.ext.dependencies["arouter_api"]
    annotationProcessor  rootProject.ext.dependencies["arouter_compiler"]
//    api rootProject.ext.dependencies["arouter_annotation"]

}
